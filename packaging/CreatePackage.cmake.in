SET(PPA_VERSION "1.0.0")
SET(PPA_NAME "libbacktrace")
SET(PPA_MAINTAINER "Federico Cavalieri <f@28.io>")
SET(PPA_HOMEPAGE "https://github.com/28msec/libbacktrace")

SET(PPA_DISTRO "trusty") #could be removed
IF (NOT PPA_DISTRO)
  MESSAGE(FATAL_ERROR "Mandatory variable PPA_DISTRO missing")
ENDIF (NOT PPA_DISTRO)

IF (NOT PPA_THREADS)
  SET(PPA_THREADS "4")
ENDIF (NOT PPA_THREADS)
SET(PPA_THREADS_SWITCH "-j${PPA_THREADS}")

SET(PPA_DIR "@CMAKE_CURRENT_BINARY_DIR@/debTemp")
SET(PPA_SOURCE_DIR "${PPA_DIR}/${PPA_NAME}-${PPA_VERSION}")
SET(PPA_DEBIAN_DIR "${PPA_SOURCE_DIR}/debian")

SET(PPA_INSTALL_PATH "/usr")

EXECUTE_PROCESS(COMMAND date -R OUTPUT_VARIABLE PPA_DATE_TIME)

FILE(REMOVE_RECURSE ${PPA_DIR})
FILE(MAKE_DIRECTORY ${PPA_SOURCE_DIR})

MESSAGE(STATUS "Preparing sources for package ${PPA_NAME}.")
FILE(COPY @CMAKE_SOURCE_DIR@/.
  DESTINATION ${PPA_SOURCE_DIR}
  PATTERN "build" EXCLUDE
  PATTERN "*~" EXCLUDE
  PATTERN "*.swp" EXCLUDE
  PATTERN ".idea" EXCLUDE
  PATTERN ".git" EXCLUDE  
)

MESSAGE(STATUS "Packing sources for PPA.")
EXECUTE_PROCESS(
  COMMAND tar czf ${PPA_NAME}_${PPA_VERSION}.orig.tar.gz  ${PPA_NAME}-${PPA_VERSION}
  WORKING_DIRECTORY ${PPA_DIR})

SET(PPA_BUILD_DEPENDENCIES "debhelper, libdwarf-dev")
  
SET(PPA_DEPENDENCIES "")

MESSAGE(STATUS "Copy Source .tar.gz to use the correct naming for ${PPA_DISTRO}.")
EXECUTE_PROCESS(
  COMMAND cp ${PPA_NAME}_${PPA_VERSION}.orig.tar.gz ${PPA_NAME}_${PPA_VERSION}~${PPA_DISTRO}${PPA_REVISION}.orig.tar.gz
  WORKING_DIRECTORY ${PPA_DIR})

FILE(REMOVE_RECURSE ${PPA_DEBIAN_DIR})
FILE(MAKE_DIRECTORY ${PPA_DEBIAN_DIR})

MESSAGE(STATUS "Creating configuration files for ${PPA_DISTRO}.")
CONFIGURE_FILE(@CMAKE_CURRENT_SOURCE_DIR@/debian/changelog.in "${PPA_DEBIAN_DIR}/changelog" @ONLY)
CONFIGURE_FILE(@CMAKE_CURRENT_SOURCE_DIR@/debian/copyright.in "${PPA_DEBIAN_DIR}/copyright" @ONLY)
CONFIGURE_FILE(@CMAKE_CURRENT_SOURCE_DIR@/debian/control.in "${PPA_DEBIAN_DIR}/control" @ONLY)
CONFIGURE_FILE(@CMAKE_CURRENT_SOURCE_DIR@/debian/rules.in "${PPA_DEBIAN_DIR}/rules" @ONLY)

FILE(WRITE ${PPA_DEBIAN_DIR}/compat "7")
FILE(WRITE ${PPA_DEBIAN_DIR}/source/format "3.0 (quilt)")

#### BUILD AND PACKAGE ####
MESSAGE(STATUS "Debian binary package generation for ${PPA_DISTRO} from ${PPA_SOURCE_DIR}.")
EXECUTE_PROCESS(
  # params "-us -uc" skip signing the package
  COMMAND debuild -us -uc -j${PPA_THREADS}
  #OUTPUT_VARIABLE DEBUILD_OUTPUT
  #ERROR_VARIABLE DEBUILD_OUTPUT
  RESULT_VARIABLE RETURN_CODE
  WORKING_DIRECTORY ${PPA_SOURCE_DIR})
IF (NOT RETURN_CODE EQUAL 0)
  MESSAGE(FATAL_ERROR "Debian package generation failed: ${RETURN_CODE}, ${DEBUILD_OUTPUT}")
ENDIF (NOT RETURN_CODE EQUAL 0)